swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /user/profile:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      responses:
        "200":
          description: User profile retrieved successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Accounts
      summary: List of accounts
      description: Receives a list of accounts for the authenticated user
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AccountsListResponse"
        "401":
          description: Unauthorized
        "404":
          description: account not found
        "500":
          description: Internal Server Error

  /accounts/{accountId}/transactions/current-month:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Current month transactions for account
      description: Returns current month transactions for specified account
      parameters:
        - name: accountId
          in: path
          required: true
          type: string
          description: ID of the target account
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/AccountMonthTransactionsResponse"
        "401":
          description: Unauthorized
        "404":
          description: transaction not found
        "500":
          description: Internal Server Error

  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Transaction details
      description: Returns the details of a specific transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/TransactionDetailsResponse"
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

  /categories:
    get:
      security:
        - Bearer: []
      tags:
        - Categories
      summary: Get all transaction categories
      description: Returns an array of available transaction categories
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/CategoriesListResponse"
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error

  /transactions/{transactionId}/category:
    patch:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update transaction category
      description: Update the category of a specific transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/CategoryUpdate"
      responses:
        "200":
          description: Category updated successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid category
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

  /transactions/{transactionId}/note:
    patch:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update transaction note
      description: Update the note of a specific transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: ID of the transaction
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/NoteUpdate"
      responses:
        "200":
          description: Note updated successfully
          schema:
            $ref: "#/definitions/NoteResponse"
        "400":
          description: Invalid note format
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

    delete:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Delete transaction note
      description: Remove the note from a specific transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          type: string
          description: ID of the transaction
      responses:
        "200":
          description: Note deleted successfully
          schema:
            $ref: "#/definitions/NoteResponse"
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal Server Error

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name

  Login:
    type: object
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          category:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string

  AccountsListResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Success"
      body:
        type: array
        items:
          $ref: "#/definitions/BankAccount"

  BankAccount:
    type: object
    properties:
      id:
        type: string
        description: identifier of the account
      name:
        type: string
        description: account name
      balance:
        type: number
        description: balance of the account
      checking:
        type: number
        description: number of checking accounts

  AccountMonthTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Success"
      body:
        type: object
        properties:
          accountId:
            type: string
          accountName:
            type: string
          currentMonth:
            type: string
            format: YYYY-MM
            example: "2025-01"
          transactions:
            type: array
            items:
              $ref: "#/definitions/TransactionSummary"

  TransactionSummary:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date
      description:
        type: string
      amount:
        type: number
      balance:
        type: number

  TransactionDetailsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        $ref: "#/definitions/TransactionDetails"

  TransactionDetails:
    type: object
    properties:
      type:
        type: string
      category:
        type: string
      note:
        type: string


  CategoriesListResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Success"
      body:
        type: array
        items:
          type: string
          enum: ["Food", "Transport", "Shopping", "Multimedia", "Sport"]
          description: "Catégories disponibles"
          example: "Food"
    example:
      status: 200
      message: "Success"
      body: ["Food", "Transport", "Shopping", "Multimedia", "Sport"]

  CategoryUpdate:
    type: object
    required: [category]
    properties:
      category:
        type: string
        enum: ["Food", "Transport", "Shopping", "Multimedia", "Sport"]
        example: "Food"
        description: "Doit correspondre à une valeur de /categories"

  NoteUpdate:
    type: object
    required: [note]
    properties:
      note:
        type: string
        minLength: 1
        maxLength: 500
        description: "New note content"
        example: "Remboursement à Jean"
    example:
      note: "Dîner du vendredi soir"

  NoteResponse:
    type: object
    properties:
      status:
        type: integer
        example: 200
      message:
        type: string
        example: "Success"
      body:
        type: object
        properties:
          note:
            type: string
            example: "Note example"
            description: "Note content (null if deleted)"
